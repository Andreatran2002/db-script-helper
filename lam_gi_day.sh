#!/bin/bash

# Th∆∞ m·ª•c ch·ª©a backup (c·∫≠p nh·∫≠t ƒë∆∞·ªùng d·∫´n ph√π h·ª£p)
BACKUP_DIR="directus-uat"
HOST="100.64.0.46"
PGPASSWORD="VlPXfknHciLeFvnKaz62k7Ihd15frYsEpeB7dUHibRFq8K1DAOcODWeM4oRUykV7"
USER="postgres"
# T√™n database c·∫ßn restore
DB_NAME="directus"

SLEEP_TIME=2

# Danh s√°ch c√°c b·∫£ng c·∫ßn skip
SKIP_TABLES=()

# H√†m ki·ªÉm tra k·∫øt n·ªëi ƒë·∫øn database
check_db_connection() {
    echo "üîÑ ƒêang ki·ªÉm tra k·∫øt n·ªëi ƒë·∫øn database..."
    PGPASSWORD="$PGPASSWORD" psql -d "$DB_NAME" -U $USER -h $HOST -p 5432 -c "\q"
    if [ $? -eq 0 ]; then
        echo "‚úÖ K·∫øt n·ªëi th√†nh c√¥ng ƒë·∫øn database: $DB_NAME"
    else
        echo "‚ùå K·∫øt n·ªëi th·∫•t b·∫°i ƒë·∫øn database: $DB_NAME"
        exit 1
    fi
}

# H√†m l·∫•y danh s√°ch c√°c b·∫£ng trong backup
get_tables_list() {
    echo "üîÑ ƒêang l·∫•y danh s√°ch b·∫£ng t·ª´ database..."
    TABLES=$(pg_restore -l $BACKUP_DIR | awk '/TABLE DATA/ {print $7}')
    echo "Danh s√°ch b·∫£ng s·∫Ω ƒë∆∞·ª£c restore:"
    echo "$TABLES"
}


get_sequences_list() {
    echo "üîÑ ƒêang l·∫•y danh s√°ch sequence t·ª´ database..."
    SEQUENCES=$(pg_restore -l $BACKUP_DIR | awk '/SEQUENCE SET/ {print $7}')
    echo "Danh s√°ch sequence s·∫Ω ƒë∆∞·ª£c restore:"
    echo "$SEQUENCES"
}


# H√†m ki·ªÉm tra xem b·∫£ng c√≥ trong danh s√°ch skip kh√¥ng
is_table_skipped() {
    local table=$1
    for skip_table in "${SKIP_TABLES[@]}"; do
        if [ "$table" == "$skip_table" ]; then
            return 0
        fi
    done
    return 1
}

restore_schema() {
    echo "üîÑ ƒêang restore schema..."
    PGPASSWORD="$PGPASSWORD" pg_restore -d "$DB_NAME" -U $USER -h $HOST -p 5432 -Fd "$BACKUP_DIR" --schema-only
    echo "üéâ Restore schema ho√†n t·∫•t!"
    sleep $SLEEP_TIME
}

# H√†m restore c√°c b·∫£ng
restore_tables() {
    local total_tables=$(echo "$TABLES" | wc -l)
    local restored_count=0

    for TABLE in $TABLES; do
        TABLE=$(echo $TABLE | xargs) # Trim whitespace
        if is_table_skipped "$TABLE"; then
            echo "‚è≠Ô∏è B·ªè qua b·∫£ng: $TABLE"
            continue
        fi
        echo "‚è≥ ƒêang restore b·∫£ng: $TABLE ..."
        PGPASSWORD="$PGPASSWORD" pg_restore -d "$DB_NAME" -U $USER -h $HOST -p 5432 -Fd "$BACKUP_DIR" --table="$TABLE" --disable-triggers --data-only
        
        if [ $? -eq 0 ]; then
            restored_count=$((restored_count + 1))
            echo "‚úÖ Restore th√†nh c√¥ng b·∫£ng: $TABLE ($restored_count/$total_tables)"
        else
            echo "‚ùå Restore th·∫•t b·∫°i b·∫£ng: $TABLE"
        fi

        # Ch·ªù 10 gi√¢y tr∆∞·ªõc khi ti·∫øp t·ª•c b·∫£ng ti·∫øp theo
        echo "‚è∏Ô∏è ƒê·ª£i $SLEEP_TIME gi√¢y tr∆∞·ªõc khi restore b·∫£ng ti·∫øp theo..."
        sleep $SLEEP_TIME
    done
    echo "üéâ Qu√° tr√¨nh restore ho√†n t·∫•t!"
}

restore_sequence() {
    local total_tables=$(echo "$SEQUENCES" | wc -l)
    local restored_count=0

    for SEQUENCE in $SEQUENCES; do
        SEQUENCE=$(echo $SEQUENCE | xargs) # Trim whitespace
        if is_table_skipped "$SEQUENCE"; then
            echo "‚è≠Ô∏è B·ªè qua b·∫£ng: $SEQUENCE"
            continue
        fi
        echo "üîÑ ƒêang restore sequence cho b·∫£ng: $SEQUENCE ..."
        PGPASSWORD="$PGPASSWORD" psql -d "$DB_NAME" -U $USER -h $HOST -p 5432 -c "SELECT SETVAL('${SEQUENCE}', MAX(id)) FROM ${SEQUENCE%_id_seq};"
        
        if [ $? -eq 0 ]; then
            restored_count=$((restored_count + 1))
            echo "‚úÖ Restore sequence th√†nh c√¥ng cho b·∫£ng: $SEQUENCE ($restored_count/$total_tables)"
        else
            echo "‚ùå Restore sequence th·∫•t b·∫°i cho b·∫£ng: $SEQUENCE"
        fi

        # Ch·ªù 10 gi√¢y tr∆∞·ªõc khi ti·∫øp t·ª•c b·∫£ng ti·∫øp theo
        echo "‚è∏Ô∏è ƒê·ª£i $SLEEP_TIME gi√¢y tr∆∞·ªõc khi restore sequence b·∫£ng ti·∫øp theo..."
        sleep $SLEEP_TIME
    done
    echo "üéâ Qu√° tr√¨nh restore sequence ho√†n t·∫•t!"
   
}

# Th·ª±c thi c√°c h√†m
check_db_connection
# get_tables_list
# restore_schema
# restore_tables 
get_sequences_list
restore_sequence