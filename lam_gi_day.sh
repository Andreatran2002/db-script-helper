#!/bin/bash
# Load environment variables from .env file if it exists
if [ -f .env ]; then
    export $(grep -v '^#' .env | xargs)
fi

# Th∆∞ m·ª•c ch·ª©a backup (c·∫≠p nh·∫≠t ƒë∆∞·ªùng d·∫´n ph√π h·ª£p)
BACKUP_DIR="${BACKUP_DIR:-}"
HOST="${HOST:-localhost}"
PGPASSWORD="${PGPASSWORD:-localhost}"
USER="${USER:-postgres}"
PORT="${PORT:-5432}"
# T√™n database c·∫ßn restore
DB_NAME="${DB_NAME:-postgres}"

SLEEP_TIME=1

# Danh s√°ch c√°c b·∫£ng c·∫ßn skip
SKIP_TABLES=()

# T·∫°o th∆∞ m·ª•c log n·∫øu ch∆∞a t·ªìn t·∫°i
mkdir -p ./log

# T√™n file log
LOG_FILE="./log/${HOST}-${DB_NAME}-$(date +%Y%m%d).log"

# H√†m ghi log
log_message() {
    echo "$1" | tee -a "$LOG_FILE"
}

# H√†m ki·ªÉm tra k·∫øt n·ªëi ƒë·∫øn database
check_db_connection() {
    log_message "üîÑ ƒêang ki·ªÉm tra k·∫øt n·ªëi ƒë·∫øn database..."
    PGPASSWORD="$PGPASSWORD" psql -d "$DB_NAME" -U $USER -h $HOST -p $PORT -c "\q"
    if [ $? -eq 0 ]; then
        log_message "‚úÖ K·∫øt n·ªëi th√†nh c√¥ng ƒë·∫øn database: $DB_NAME"
    else
        log_message "‚ùå K·∫øt n·ªëi th·∫•t b·∫°i ƒë·∫øn database: $DB_NAME"
        exit 1
    fi
}

# H√†m l·∫•y danh s√°ch c√°c b·∫£ng trong backup
get_tables_list() {
    log_message "üîÑ ƒêang l·∫•y danh s√°ch b·∫£ng t·ª´ database..."
    TABLES=$(pg_restore -l $BACKUP_DIR | awk '/TABLE DATA/ {print $7}')
    log_message "Danh s√°ch b·∫£ng s·∫Ω ƒë∆∞·ª£c restore:"
    log_message "$TABLES"
}

get_sequences_list() {
    log_message "üîÑ ƒêang l·∫•y danh s√°ch sequence t·ª´ database..."
    SEQUENCES=$(pg_restore -l $BACKUP_DIR | awk '/SEQUENCE SET/ {print $7}')
    log_message "Danh s√°ch sequence s·∫Ω ƒë∆∞·ª£c restore:"
    log_message "$SEQUENCES"
}

# H√†m ki·ªÉm tra xem b·∫£ng c√≥ trong danh s√°ch skip kh√¥ng
is_table_skipped() {
    local table=$1
    for skip_table in "${SKIP_TABLES[@]}"; do
        if [ "$table" == "$skip_table" ]; then
            return 0
        fi
    done
    return 1
}

restore_schema() {
    log_message "üîÑ ƒêang restore schema..."
    PGPASSWORD="$PGPASSWORD" pg_restore -d "$DB_NAME" -U $USER -h $HOST -p $PORT -Fd "$BACKUP_DIR" --schema-only
    log_message "üéâ Restore schema ho√†n t·∫•t!"
    sleep $SLEEP_TIME
}

# H√†m restore c√°c b·∫£ng
restore_tables() {
    local total_tables=$(echo "$TABLES" | wc -l)
    local restored_count=0

    for TABLE in $TABLES; do
        TABLE=$(echo $TABLE | xargs) # Trim whitespace
        if is_table_skipped "$TABLE"; then
            log_message "‚è≠Ô∏è B·ªè qua b·∫£ng: $TABLE"
            continue
        fi
        log_message "‚è≥ ƒêang restore b·∫£ng: $TABLE ..."
        PGPASSWORD="$PGPASSWORD" pg_restore -d "$DB_NAME" -U $USER -h $HOST -p $PORT -Fd "$BACKUP_DIR" --table="$TABLE" --disable-triggers --data-only
        
        if [ $? -eq 0 ]; then
            restored_count=$((restored_count + 1))
            log_message "‚úÖ Restore th√†nh c√¥ng b·∫£ng: $TABLE ($restored_count/$total_tables)"
        else
            log_message "‚ùå Restore th·∫•t b·∫°i b·∫£ng: $TABLE"
        fi

        # Ch·ªù 10 gi√¢y tr∆∞·ªõc khi ti·∫øp t·ª•c b·∫£ng ti·∫øp theo
        log_message "‚è∏Ô∏è ƒê·ª£i $SLEEP_TIME gi√¢y tr∆∞·ªõc khi restore b·∫£ng ti·∫øp theo..."
        sleep $SLEEP_TIME
    done
    log_message "üéâ Qu√° tr√¨nh restore ho√†n t·∫•t!"
}

restore_sequence() {
    local total_tables=$(echo "$SEQUENCES" | wc -l)
    local restored_count=0

    for SEQUENCE in $SEQUENCES; do
        SEQUENCE=$(echo $SEQUENCE | xargs) # Trim whitespace
        if is_table_skipped "$SEQUENCE"; then
            log_message "‚è≠Ô∏è B·ªè qua b·∫£ng: $SEQUENCE"
            continue
        fi
        log_message "üîÑ ƒêang restore sequence cho b·∫£ng: $SEQUENCE ..."
        PGPASSWORD="$PGPASSWORD" psql -d "$DB_NAME" -U $USER -h $HOST -p $PORT -c "SELECT SETVAL('${SEQUENCE}', MAX(id)) FROM \"${SEQUENCE%_id_seq}\";"
        
        if [ $? -eq 0 ]; then
            restored_count=$((restored_count + 1))
            log_message "‚úÖ Restore sequence th√†nh c√¥ng cho b·∫£ng: $SEQUENCE ($restored_count/$total_tables)"
        else
            log_message "‚ùå Restore sequence th·∫•t b·∫°i cho b·∫£ng: $SEQUENCE"
        fi

        # Ch·ªù 10 gi√¢y tr∆∞·ªõc khi ti·∫øp t·ª•c b·∫£ng ti·∫øp theo
        log_message "‚è∏Ô∏è ƒê·ª£i $SLEEP_TIME gi√¢y tr∆∞·ªõc khi restore sequence b·∫£ng ti·∫øp theo..."
        sleep $SLEEP_TIME
    done
    log_message "üéâ Qu√° tr√¨nh restore sequence ho√†n t·∫•t!"
}

# Th·ª±c thi c√°c h√†m
check_db_connection
# get_tables_list
# restore_schema
# restore_tables 
get_sequences_list
restore_sequence